spring.datasource.hikari.jdbc-url=jdbc:oracle:thin:@127.0.0.1:1521:orcl
spring.datasource.hikari.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.hikari.username=the
spring.datasource.hikari.password=1234

#jpa-oracleì ì©
spring.jpa.database=oracle
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#ddl ì°ìµí ëë§ true  ì¤ì ë¡ì¬ì©ììë flase
spring.jpa.generate-ddl=true
spring.jpa.hibernate.use-new-id-generator-mappings=true
spring.jpa.show-sql=true

#Spring Boot에서 Multipart 요청을 처리하려면 
#multipartConfigElement, multipartResolver 이름의 
#빈이 애플리케이션 컨텍스트에 존재해야 한다
#애플리케이션 시작시 MultipartAutoConfiguration 클래스가 이 작업을 자동으로 수행한다.
#multipart.maxFileSize는 업로드 가능한 최대 파일 크기, multipart.maxRequestSize는 업로드 가능한 총 요청 크기이다. 
#이 조건을 초과한 요청이 들어오면 MultipartException을 발생시킨다.
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=25MB
spring.servlet.multipart.location=D:/spring/workspace/kurly-v2/src/main/resources/static/upload

#spring.mvc.static-path-pattern=/
#spring.resources.static-locations=classpath:
#spring.resources.add-mappings=true

